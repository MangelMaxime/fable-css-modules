// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`contains 1 class if there is one CSS Module 1`] = `
"//------------------------------------------------------------------------------
//        This code was generated by fable-css-modules.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------

[<RequireQualifiedAccess>]
module internal CssModules

open Fable.Core

type App =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

"
`;

exports[`contains 1 class per CSS Module 1`] = `
"//------------------------------------------------------------------------------
//        This code was generated by fable-css-modules.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------

[<RequireQualifiedAccess>]
module internal CssModules

open Fable.Core

type App =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

type Main =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

"
`;

exports[`if internal is set to false module should not be marked as internal  1`] = `
"//------------------------------------------------------------------------------
//        This code was generated by fable-css-modules.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------

[<RequireQualifiedAccess>]
module CssModules

open Fable.Core

type App =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

"
`;

exports[`module name with a dot should be transformed to a valid F# identifier 1`] = `
"//------------------------------------------------------------------------------
//        This code was generated by fable-css-modules.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------

[<RequireQualifiedAccess>]
module internal CssModules

open Fable.Core

type User_Index =

    /// <summary>
    /// Binding for <c>list</c> class
    /// </summary>
    [<Emit("$0[\\"list\\"]")>]
    abstract list : string

"
`;

exports[`nested CSS is supported 1`] = `
"//------------------------------------------------------------------------------
//        This code was generated by fable-css-modules.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------

[<RequireQualifiedAccess>]
module internal CssModules

open Fable.Core

type CSS =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

    /// <summary>
    /// Binding for <c>blue</c> class
    /// </summary>
    [<Emit("$0[\\"blue\\"]")>]
    abstract blue : string

type SASS =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

    /// <summary>
    /// Binding for <c>blue</c> class
    /// </summary>
    [<Emit("$0[\\"blue\\"]")>]
    abstract blue : string

type SCSS =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

    /// <summary>
    /// Binding for <c>blue</c> class
    /// </summary>
    [<Emit("$0[\\"blue\\"]")>]
    abstract blue : string

"
`;

exports[`nested folder is supported 1`] = `
"//------------------------------------------------------------------------------
//        This code was generated by fable-css-modules.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------

[<RequireQualifiedAccess>]
module internal CssModules

open Fable.Core

type App =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

module Folder1 =

    type App =

        /// <summary>
        /// Binding for <c>red</c> class
        /// </summary>
        [<Emit("$0[\\"red\\"]")>]
        abstract red : string

    module Folder1_1 =

        type App =

            /// <summary>
            /// Binding for <c>red</c> class
            /// </summary>
            [<Emit("$0[\\"red\\"]")>]
            abstract red : string

"
`;

exports[`sanitize class name 1`] = `
"//------------------------------------------------------------------------------
//        This code was generated by fable-css-modules.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------

[<RequireQualifiedAccess>]
module internal CssModules

open Fable.Core

type App =

    /// <summary>
    /// Binding for <c>user-name</c> class
    /// </summary>
    [<Emit("$0[\\"user-name\\"]")>]
    abstract userName : string

    /// <summary>
    /// Binding for <c>user__age</c> class
    /// </summary>
    [<Emit("$0[\\"user__age\\"]")>]
    abstract user__age : string

"
`;

exports[`support CSS/SASS/SCSS modules 1`] = `
"//------------------------------------------------------------------------------
//        This code was generated by fable-css-modules.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------

[<RequireQualifiedAccess>]
module internal CssModules

open Fable.Core

type CSS =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

type SASS =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

type SCSS =

    /// <summary>
    /// Binding for <c>red</c> class
    /// </summary>
    [<Emit("$0[\\"red\\"]")>]
    abstract red : string

"
`;
